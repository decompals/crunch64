name: C bindings

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-c-bindings:
    name: Test C bindings
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Make C test programs
        run: make

      - name: Test Yay0
        run: ./c_bindings_tests/single_yay0.elf

      - name: Test Yaz0
        run: ./c_bindings_tests/single_yaz0.elf

  release:
    name: Release ${{ matrix.crate-type }} for ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: [x86_64-pc-windows-gnu, x86_64-apple-darwin, x86_64-unknown-linux-musl, x86_64-unknown-linux-gnu]
        crate-type: [staticlib, cdylib]
        include:
          - target: x86_64-pc-windows-gnu
            archive: zip
          - target: x86_64-apple-darwin
            archive: zip
          - target: x86_64-unknown-linux-musl
            archive: tar.gz
          - target: x86_64-unknown-linux-gnu
            archive: tar.gz
        exclude:
          - target: x86_64-pc-windows-gnu
            crate-type: cdylib # linker `x86_64-w64-mingw32-gcc` not found
          - target: x86_64-apple-darwin
            crate-type: cdylib # note: cc: error: unrecognized command-line option '-arch'
          - target: x86_64-unknown-linux-musl
            crate-type: cdylib # musl doesn't support cdylib

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install target
        run: rustup target add ${{ matrix.target }}

      - name: Build lib
        run: cargo rustc --manifest-path lib/Cargo.toml --lib --release --crate-type ${{ matrix.crate-type }} --target ${{ matrix.target }}

      - name: Move files for packaging
        run: |
          mkdir -p package/lib package/include
          find target/${{ matrix.target }}/release -maxdepth 1 -name "libcrunch64.*" -not -name "*.d" -print -exec cp {} package/lib/ \;
          cp -r c_bindings/* package/include/
          cp LICENSE package/crunch64.LICENSE
          cp README.md package/crunch64.README.md
          tree package

      - name: Package .tar.gz
        if: matrix.archive == 'tar.gz'
        run: |
          cd package && tar -czf ../crunch64-${{ matrix.crate-type }}-${{ matrix.target }}.tar.gz *

      - name: Package .zip
        if: matrix.archive == 'zip'
        run: |
          cd package && zip -r ../crunch64-${{ matrix.crate-type }}-${{ matrix.target }}.zip *

      - name: Upload .tar.gz archive
        if: matrix.archive == 'tar.gz'
        uses: actions/upload-artifact@v3
        with:
          name: crunch64-${{ matrix.crate-type }}-${{ matrix.target }}
          path: |
            crunch64-${{ matrix.crate-type }}-${{ matrix.target }}.tar.gz
          if-no-files-found: error

      - name: Upload .zip archive
        if: matrix.archive == 'zip'
        uses: actions/upload-artifact@v3
        with:
          name: crunch64-${{ matrix.crate-type }}-${{ matrix.target }}
          path: |
            crunch64-${{ matrix.crate-type }}-${{ matrix.target }}.zip
          if-no-files-found: error
